{"version":3,"sources":["components/Header/NameInput.js","components/Header/Header.js","dataStructures.js","components/Pokemons.js","components/Results.js","components/CrimeLocation.js","components/CrimeCategories.js","components/Home.js","components/Footer.js","assets/pokeball-transp.png","components/Ball.js","components/App.js","reportWebVitals.js","index.js"],"names":["NameInput","handleChange","e","setState","userName","target","value","handleSubmit","preventDefault","props","userInput","state","name","className","htmlFor","onChange","this","type","id","onClick","Component","Header","getUsername","getUser","username","length","cityCoordinates","crimeCategories","Pokemons","setArrayOfSuccessPokemonObj","succeesPokemonPromise","a","successArray","i","data","pokemon","getRandomIndex","pokemObject","push","translateCoordsToCityName","element","poly","toString","location","cityName","setArrayOfWrongPokemonObj","unsuccessfulPokemonPromises","getPokemonsAPICall","unsuccessfulArray","parseUnsuccessfulPokemonPromises","getPokemons","successPokemonType","successfulPokemon","successfulArray","getFinalPokemonDisplayList","finalSuccessArray","finalUnsuccessfulArray","combineArrays","unsuccessArray","console","log","finalArray","shuffle","displayPokemonList","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","pokemonArray","flag","requestPokemonArray","allPokeProperties","axios","get","url","Promise","all","forEach","pokemonObj","index","onePokeProperties","pokeImage","abilities","abilityArray","ability","match","image","PokemonType","method","dataResponse","limit","PokemonPromises","unSuccessfulPokemonArray","pokemonList","successPokemonArray","unSuccessPokemonArray","crime","map","pokemonIndex","src","alt","Results","isSuccessfulFlag","CrimeLocation","onLocationChange","getLocation","place","CrimeCategories","handleCrime","getCrimeChange","crimeCategoriesArray","category","Home","getCrime","customArea","crimeCategory","responseType","params","getPokemonType","userSelectedCrime","successType","key","successfulType","getLocationChange","selectedLocation","selectedCrime","pokemonType","crimeArray","Object","keys","Footer","href","Ball","ball","App","grabUsername","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45b55a30.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass NameInput extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userName: ''\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            userName: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.userInput(this.state.userName)\n    }\n\n    render() {\n        return (\n            <form name=\"userName\" className=\"userNameForm\">\n                <label htmlFor=\"nameInput\">Your name: </label>\n                <input onChange={this.handleChange} type=\"text\" name=\"nameInput\" id=\"nameInput\"/>\n\n                <button className=\"nameButton\" onClick={this.handleSubmit}> Submit</button>\n            </form>\n        )\n    }\n}\n\nexport default NameInput;","import { Component } from 'react';\nimport NameInput from './NameInput.js';\n// import icon from '../pokemon-icon-2.png'\n\nclass Header extends Component{\n\n\n    getUsername = (name) => {\n        this.props.getUser(name)\n    }\n\n    render() {\n\n        return (\n            <>\n                <header>\n                    <div className=\"wrapper\">\n                        <h1>Detective Pokémon</h1>\n\n                        <article className=\"introText\">\n                            <p>It is dark times out there. In this new world, Pokémon come to rescue and support the UK law enforcement.</p> \n                            <p>Pick a Pokemon that is best suited to help you solve a crime. Each pokemon has different abilities that can help them solve different categories of crime.</p>\n                        </article>\n\n                        <NameInput userInput={this.getUsername}/>\n\n                        {\n                            this.props.username.length >= 2 \n                                ? <p>Thank you <span>{this.props.username} for joining this fight with us!</span></p>\n                                : null\n                                // <p>You must enter a valid name that is more than 1 characters long.</p>\n                        }\n                        \n                    </div>\n                </header>\n            </>\n        )\n    }\n}\n\nexport default Header;","export const cityCoordinates = [\n  {\n    \"name\":\"London\",\n    \"poly\":\"51.47589,-0.15156:51.47589,-0.10156:51.52589,-0.10156:51.52589,-0.15156\"\n  },\n  {\n    \"name\":\"Birmingham\",\n    \"poly\":\"52.43391,-1.942301:52.43391,-1.842301:52.53391,-1.842301:52.53391,-1.942301\"\n  },\n  {\n    \"name\":\"Liverpool\",\n    \"poly\":\"53.35585,-3.035683:53.35585,-2.935683:53.45585,-2.935683:53.45585,-3.035683\"\n  },\n  {\n    \"name\":\"Nottingham\",\n    \"poly\":\"52.904,-1.290101:52.904,-1.190101:53.004,-1.190101:53.004,-1.290101\"\n  },\n  {\n    \"name\":\"Sheffield\",\n    \"poly\":\"53.34563,-1.689539:53.34563,-1.589539:53.44563,-1.589539:53.44563,-1.689539\"\n  }\n]\n\nexport const crimeCategories = {\n  \"anti-social-behaviour\" : { \n    \"readableCrimeName\": \"antisocial behaviour\",\n    \"successfulType\": 14,\n    \"typeName\": \"psychic\",\n    \"reason\": \"Psychic pokemon are able to read and calm minds!\"\n  },\n  \"bicycle-theft\" : { \n    \"readableCrimeName\": \"bicycle theft\",\n    \"successfulType\": 3,\n    \"typeName\": \"flying\",\n    \"reason\": \"Flying pokemon are able to fly and track the thief!\"\n  },\n  \"burglary\" : { \n    \"readableCrimeName\": \"burglary\",\n    \"successfulType\": 2,\n    \"typeName\": \"fighting\",\n    \"reason\": \"Fighting pokemon are able to beat the burglar in close quarter combat!\"\n  },\n  \"criminal-damage-arson\" : { \n    \"readableCrimeName\": \"criminal damage or arson\",\n    \"successfulType\": 11,\n    \"typeName\": \"water\",\n    \"reason\": \"Water pokemon can put out the fire!\"\n  },\n  \"drugs\" : { \n    \"readableCrimeName\": \"drugs\",\n    \"successfulType\": 4,\n    \"typeName\": \"poison\",\n    \"reason\": \"Poison pokemon can detect drugs and create antidotes!\"\n  },\n  \"possession-of-weapons\" : { \n    \"readableCrimeName\": \"possession of weapons\",\n    \"successfulType\": 8,\n    \"typeName\": \"ghost\",\n    \"reason\": \"Ghost pokemon can't be hurt by corporeal weapons!\"\n  },\n  \"public-order\" : { \n    \"readableCrimeName\": \"public order\",\n    \"successfulType\": 12,\n    \"typeName\": \"grass\",\n    \"reason\": \"Grass pokemon can put people to sleep!\"\n  },\n  \"robbery\" : { \n    \"readableCrimeName\": \"robbery\",\n    \"successfulType\": 13,\n    \"typeName\": \"electric\",\n    \"reason\": \"Electric pokemon can stun the assailant!\"\n  },\n  \"shoplifting\" : { \n    \"readableCrimeName\": \"shoplifting\",\n    \"successfulType\": 15,\n    \"typeName\": \"ice\",\n    \"reason\": \"Ice pokemon can freeze the shoplifter in place!\"\n  },\n  \"theft-from-the-person\" : { \n    \"readableCrimeName\": \"theft from a person\",\n    \"successfulType\": 1,\n    \"typeName\": \"normal\",\n    \"reason\": \"Normal pokemon can stop theft from the person!\"\n  },\n  \"vehicle-crime\" : { \n    \"readableCrimeName\": \"vehicle crime\",\n    \"successfulType\": 16,\n    \"typeName\": \"dragon\",\n    \"reason\": \"Dragon pokemon can fly and stop a car!\"\n  },\n  \"violent-crime\" : { \n    \"readableCrimeName\": \"violent crime\",\n    \"successfulType\": 18,\n    \"typeName\": \"fairy\",\n    \"reason\": \"Fairy pokemon can turn any cruel person into a nice one!\"\n  }\n}","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { cityCoordinates } from '../dataStructures.js'\n\nclass Pokemons extends Component {\n  constructor() {\n    super();   \n    this.state = {\n      displayPokemonList: [],\n      pokemonList: [],\n      successPokemonArray: [],\n      unSuccessPokemonArray: [],\n      cityName: 'city'\n      // successPokemonType: this.props.successPokemonType,\n    };\n  }\n\n  componentDidMount() {\n    // console.log(this.props.successPokemonType);\n    this.getPokemons(this.props.successPokemonType);\n    // console.log(newPokemonArray);\n   \n  };\n  // success pokemon obj in state\n  setArrayOfSuccessPokemonObj = async (succeesPokemonPromise) => {\n    //Push the success pokemon object along with a success flag\n    let successArray = []\n    for (let i =0; i< 10; i++){\n\n        let pokemObject =\n         await succeesPokemonPromise.data.pokemon[this.getRandomIndex(20)].pokemon;\n\n          successArray.push(pokemObject);\n    }\n    // pokemObject.match = \"success\";\n\n    // const tempArray = []\n    // tempArray.push(pokemObject)\n    // console.log(successArray);\n    return successArray;\n    // this.setState({\n    //   successPokemonArray: tempArray\n    // })\n\n  }\n\n  translateCoordsToCityName = () => {\n    // console.log(this.props.location, this.state.cityName);\n    for (const element of cityCoordinates) {\n      // console.log(element.poly);\n      if (element.poly.toString() === this.props.location.toString()) {\n        this.setState({\n          cityName: element.name\n        }) \n      };\n    };\n    // console.log(this.state.cityName); -- setState delay prevents this from showing correct answer but it works\n  }\n\n  setArrayOfWrongPokemonObj = async () => {\n    // WRONG ANSWERS API CALL =======================\n    //Make an API call to get random pokemon of different types\n    let unsuccessfulPokemonPromises = [];\n    for (let i = 0; i < 10; i++) {\n      unsuccessfulPokemonPromises[i] = await this.getPokemonsAPICall(this.getRandomIndex(17));\n    }\n\n    //Parse this promise array to create a list of unsuccessful pokemons\n    const unsuccessfulArray = this.parseUnsuccessfulPokemonPromises(\n      unsuccessfulPokemonPromises\n    );\n    // console.log(unsuccessfulArray)\n\n    return unsuccessfulArray;\n  }\n\n  getPokemons = async (successPokemonType) => {\n    // RIGHT ANSWERS API CALL =======================\n    //Make an API call to get a list of Pokemons for Successful Pokemon Type\n    //Store the top result in the displayPokemons List\n    // let newPokemonArray = [];\n    // console.log(`test`);\n    let successfulPokemon = await this.getPokemonsAPICall(successPokemonType);\n    // console.log(successfulPokemon);\n\n    const successfulArray = await this.setArrayOfSuccessPokemonObj(\n      successfulPokemon\n    );\n    const finalSuccessArray = await this.getFinalPokemonDisplayList(\n      successfulArray,\n      \"correct\"\n    );\n    const unsuccessfulArray = await this.setArrayOfWrongPokemonObj();\n    // console.log(finalSuccessArray);\n    const finalUnsuccessfulArray = await this.getFinalPokemonDisplayList(\n      unsuccessfulArray,\n      \"wrong\"\n    );\n    this.translateCoordsToCityName();\n  \n    this.combineArrays(finalSuccessArray, finalUnsuccessfulArray);\n    \n  };\n\n\n  combineArrays = (successArray , unsuccessArray) => {\n\n    console.log(successArray, unsuccessArray);\n    let finalArray = [];\n    // successArray[0] + first 4 items of unsuccessArray\n    finalArray.push(successArray[0]);\n    for(let i =0; i < 4; i++){\n        finalArray.push(unsuccessArray[i]);\n    }\n    console.log(finalArray)\n    this.shuffle(finalArray);\n    console.log(finalArray);\n    this.setState({\n      displayPokemonList: finalArray,\n    });\n  }\n\n//   Fisher-Yates \n    shuffle = (array) => {\n        let currentIndex = array.length, temporaryValue, randomIndex;\n\n        while (currentIndex !== 0) {\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n  }\n    // console.log(array);\n    return array;\n};\n  getFinalPokemonDisplayList = async (pokemonArray, flag) => {\n    // console.log(pokemonArray);\n    let requestPokemonArray = [];\n    let allPokeProperties = [];\n    for (let i = 0; i < pokemonArray.length; i++) {\n      requestPokemonArray.push(axios.get(pokemonArray[i].url))\n    }\n\n    \n   const resultPokemonObject =  await Promise.all([...requestPokemonArray]);\n//    console.log(resultPokemonObject)\n\n            resultPokemonObject.forEach((pokemonObj, index) => {\n              let onePokeProperties = {};\n              const pokeImage =\n                pokemonObj[`data`][`sprites`][`other`][`official-artwork`][\n                  `front_default`\n                ];\n\n              if (pokeImage !== null) {\n                // console.log(pokeImage);\n                // const abilities = Object.values(\n                //   pokemonObj[`data`][`abilities`]\n                // );\n                const abilities = pokemonObj[`data`][`abilities`];\n                // console.log(abilities)\n                let abilityArray = [];\n                abilities.forEach((ability) => {\n                  abilityArray.push(ability.ability.name);\n                });\n                // console.log(abilityArray);\n                const pokeName = pokemonObj[`data`][`name`];\n               \n                onePokeProperties = {\n                  name: pokeName,\n                  abilities: abilityArray,\n                  id: pokemonObj[`data`][`id`],\n                  match: flag,\n                  image: pokeImage,\n                };\n                allPokeProperties.push(onePokeProperties);\n              }\n            });\n            return allPokeProperties;\n\n        //   this .setState({\n        //       displayPokemonList: allPokeProperties\n\n        //   })\n         \n }\n\n\n  getPokemonsAPICall = (PokemonType) => {\n    return axios({\n      method: \"GET\",\n      url: `https://pokeapi.co/api/v2/type/${PokemonType}`,\n      dataResponse: \"json\",\n    });\n  };\n\n  getRandomIndex = (limit) => {\n    //   get an index between 0 to 9\n\n    const index = Math.floor(Math.random() * limit) ;\n    return index === 0 ? index + 1 : index;\n  };\n\n  parseUnsuccessfulPokemonPromises = (PokemonPromises) => {\n    // console.log(PokemonPromises);\n    let unSuccessfulPokemonArray = [];\n    for (let i = 0; i < PokemonPromises.length; i++) {\n    //   console.log(PokemonPromises[i])\n      let pokemObject =\n        PokemonPromises[i].data\n        .pokemon[\n          this.getRandomIndex(PokemonPromises[i].data.pokemon.length)\n        ].pokemon;\n      // console.log(pokemObject);\n      pokemObject.match = \"fail\";\n\n      unSuccessfulPokemonArray.push(pokemObject);\n    }\n\n    return unSuccessfulPokemonArray;\n  };\n\n  render() {\n    // console.log(this.props);\n    console.log(this.state.displayPokemonList);\n    return (\n      <>\n        <div className=\"quizMessage\">\n          <p>\n            {\" \"}\n            You are in <span className=\"chosenCity\">{this.state.cityName}</span>\n            , trying to solve a{\" \"}\n            <span className=\"chosenCrime\">{this.props.crime}</span> type of\n            crime.\n          </p>\n        </div>\n\n        <div className=\"chooseYourFighter\">\n          <p>Choose a Pokemon to help you solve the case:</p>\n        </div>\n\n        <div className=\"options\">\n          {/* DISPLAY LIST OF POKEMON OPTIONS */}\n          {this.state.displayPokemonList\n            ? this.state.displayPokemonList.map((pokemon, pokemonIndex) => {\n                return (\n                  <article\n                    className=\"pokeDisplay\"\n                    key={`${pokemonIndex}${pokemon.name}`}\n                  >\n                    <p>{pokemon.name}</p>\n\n                    <img\n                      src={pokemon.image}\n                      alt={pokemon.name}\n                      key={pokemon.name}\n                    />\n\n                    <ul>\n                      {pokemon.abilities.map((ability, index) => {\n                        return (\n                          <li key={`${ability}${index}`}>\n                            <span className=\"ability\">{ability}</span>\n                            &nbsp;\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </article>\n                );\n              })\n            : null}\n        </div>\n\n        {/* DISPLAY LIST OF POKEMON OPTIONS */}\n        {/* {this.state.displayPokemonList\n        ? this.state.displayPokemonList.map((pokemon, index) => {\n          return (\n            <article key={`${pokemon.name}${index}`} className=\"pokeDisplay\">\n                <p>{pokemon.name}</p>\n                <img src={pokemon.image} alt=\"\" />\n              </article>\n          )\n        })\n        : null} */}\n      </>\n    );\n  }\n}\n\nexport default Pokemons;","import React, { Component } from 'react'\n\nclass Results extends Component {\n    constructor() {\n        super();\n        this.state = {\n            userName: '',\n            flag: '',\n\n\n        }\n    }\n\n    render() {\n\n      if (this.props.isSuccessfulFlag === \"\") {\n        return null;\n      } else if (this.props.isSuccessfulFlag === false) {\n        return (\n          <div>\n            <h3>Fail</h3>\n          </div>\n        );\n      } else {\n        return (\n          <div>\n            <h3>Great job</h3>\n          </div>\n        );\n      }\n       \n    }\n}\n\n\nexport default Results;","import { Component } from 'react';\nimport { cityCoordinates } from '../dataStructures.js'\n\nclass CrimeLocation extends Component {\n\n    onLocationChange = (e) => {\n        this.props.getLocation(e.target.value)\n    };\n\n    render() {\n        return (\n            <select onChange={this.onLocationChange}>\n                {cityCoordinates.map((place) => {\n                    return (\n                        <option key={place.poly} value={place.poly}>\n                            {place.name}\n                        </option>\n                    );\n                })}\n            </select>\n        )\n    }\n}\n\nexport default CrimeLocation;","import { Component } from 'react';\n\nclass CrimeCategories extends Component {\n\n    handleCrime = (e) => {\n        this.props.getCrimeChange(e.target.value);\n    };\n\n    render(){\n        return(\n            <select onChange={this.handleCrime}>\n                {this.props.crimeCategoriesArray.map((category, index) => {\n                    return (\n                        <option key={index} value={category}>\n                            {category}\n                        </option>\n                    );\n                })}\n            </select>\n        )\n    }\n}\n\nexport default CrimeCategories;","import { Component } from 'react';\nimport axios from 'axios';\nimport { crimeCategories } from '../dataStructures.js'\nimport Pokemons from \"./Pokemons.js\";\nimport Results from './Results.js'\n\nimport CrimeLocation from './CrimeLocation.js';\nimport CrimeCategories from './CrimeCategories.js';\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      crimeCategories: [], \n    //   crimeCategories: {}, 1asdf\n      selectedCrime: \"\",\n      selectedLocation: \"\",\n      successPokemonType: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // store each properties in an array 2asdf\n    const crimeArray = Object.keys(crimeCategories);\n    this.setState({\n      crimeCategories: crimeArray, \n    //   crimeCategories: crimeCategories 3asdf\n    });\n  }\n\n  getCrime = (customArea, crimeCategory) => {\n    return axios({\n      url: `https://data.police.uk/api/crimes-street/${crimeCategory}`,\n      responseType: \"json\",\n      method: \"GET\",\n      params: {\n        poly: customArea,\n      },\n    });\n  };\n\n  getPokemonType = (userSelectedCrime) => {\n    let successType;\n    for (const key in crimeCategories) {\n      if (key === userSelectedCrime) {\n        successType = crimeCategories[key].successfulType;\n      }\n    }\n    console.log(successType);\n    return successType;\n  };\n\n  getLocationChange = (selectedLocation) => {\n    this.setState({\n      selectedLocation: selectedLocation,\n    });\n  };\n\n  handleCrime = (selectedCrime) => {\n    this.setState({\n      selectedCrime: selectedCrime,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    \n    const pokemonType = this.getPokemonType(this.state.selectedCrime);\n    this.setState({\n        successPokemonType: pokemonType\n    })\n  };\n\n  render() {\n      console.log(this.state.successPokemonType);\n    return (\n      <>\n        <form>\n          <CrimeLocation getLocation={this.getLocationChange} />\n\n          <CrimeCategories getCrimeChange={this.handleCrime} crimeCategoriesArray={this.state.crimeCategories}/>\n\n          <button onClick={this.handleSubmit}>Submit</button>\n        </form>\n\n        {/* DISPLAY ALL QUIZ STUFF */}\n        <div>\n          {this.state.successPokemonType ? (\n            <Pokemons\n              key={this.state.successPokemonType}\n              crime={this.state.selectedCrime}\n              successPokemonType={this.state.successPokemonType}\n              location={this.state.selectedLocation}\n            />\n          ) : null}\n        </div>\n\n        <Results isSuccessfulFlag={false}/>\n\n         {/* <div className=\"pokeDisplay\">\n             <article>\n                <img src=\"\" alt=\"\"/>\n                <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Cupiditate, ducimus expedita, enim porro, aspiditate ea deserunt facere impedit esse distinctio suscipit, rem sequi ipsa tempora maxime nesciunt. Qui provident cupiditate temporibus.</p>\n             </article>\n        </div> */}\n      </>\n    );\n  }\n}\n\nexport default Home;","const Footer = () => {\n    return (\n        <footer>\n            <p>Created by: <a href=\"https://twitter.com/CoderQuayne\">Quayne Brown</a>, <a href=\"https://twitter.com/CodeAndChai\">Swetha Chandrasekhar</a> &amp; <a href=\"https://twitter.com/geocities_exe\">Stephen Thomas</a></p>\n            <p>Created at: <a href=\"https://junocollege.com/\">Juno College</a></p>\n        </footer>\n    )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/pokeball-transp.6dabce4f.png\";","import ball from '../assets/pokeball-transp.png';\n\nconst Ball = () => {\n    return (\n        <>\n            <img src={ball} alt=\"\" className=\"ball\" />\n        </>\n    )\n}\n\nexport default Ball;","import { Component } from 'react';\nimport '../App.scss';\n\nimport Header from './Header/Header.js';\nimport Home from './Home.js';\nimport Footer from './Footer.js';\nimport Ball from './Ball.js';\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      user: ''\n    }\n  }\n\n grabUsername = (name) => {\n    this.setState({\n      user: name\n    })\n }\n\n  render() {\n    return (\n      <>\n        <Ball />\n        <Header getUser={this.grabUsername} username={this.state.user}/>\n        <Home />\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}