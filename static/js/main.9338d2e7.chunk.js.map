{"version":3,"sources":["assets/pokeball-transp.png","components/Ball.js","components/Header/NameInput.js","components/Header/Header.js","dataStructures.js","components/Pokemons.js","components/Results.js","components/CrimeLocation.js","components/CrimeCategories.js","components/Home.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Ball","props","src","ball","alt","className","displayClass","NameInput","handleChange","e","setState","userName","target","value","handleSubmit","preventDefault","userInput","state","name","htmlFor","onChange","this","type","id","onClick","Component","Header","getUsername","getUser","username","length","cityCoordinates","crimeCategories","Pokemons","getPokemons","successPokemonType","a","getPokemonsAPICall","successfulPokemon","setArrayOfSuccessPokemonObj","successfulArray","getFinalPokemonDisplayList","finalSuccessArray","setArrayOfWrongPokemonObj","unsuccessfulArray","finalUnsuccessfulArray","translateCoordsToCityName","combineArrays","succeesPokemonPromise","successArray","i","data","pokemon","getRandomIndex","pokemObject","push","unsuccessfulPokemonPromises","parseUnsuccessfulPokemonPromises","PokemonType","axios","method","url","dataResponse","element","poly","toString","location","cityName","unsuccessArray","finalArray","shuffle","console","log","displayPokemonList","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","pokemonArray","flag","requestPokemonArray","allPokeProperties","get","Promise","all","forEach","pokemonObj","onePokeProperties","pokeImage","abilities","abilityArray","ability","match","image","limit","index","PokemonPromises","unSuccessfulPokemonArray","handlePokemonSelect","selectedPokemonObject","handleGameFlag","pokemonList","successPokemonArray","unSuccessPokemonArray","crime","map","pokemonIndex","Results","isSuccessfulFlag","CrimeLocation","onLocationChange","getLocation","place","CrimeCategories","handleCrime","getCrimeChange","crimeCategoriesArray","category","Home","getPokemonType","userSelectedCrime","successType","key","successfulType","getLocationChange","selectedLocation","selectedCrime","pokemonType","flagValue","gameFlag","crimeArray","Object","keys","Footer","href","App","grabUsername","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9338d2e7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pokeball-transp.6dabce4f.png\";","import ball from \"../assets/pokeball-transp.png\";\n//importing PokemonGo logo\nconst Ball = (props) => {\n  return (\n    <>\n      <img src={ball} alt=\"The PokemonGo logo\" className={`pokemonBall ${props.displayClass}`} />\n    </>\n  );\n};\n\nexport default Ball;\n","import { Component } from \"react\";\nimport Ball from \"../Ball.js\";\nclass NameInput extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userName: \"\",\n    };\n  }\n\n// Function to store user's name input \n  handleChange = (e) => {\n    this.setState({\n      userName: e.target.value,\n    });\n  };\n\n//Function to handle input submission \n//Store the name in App.js state\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.userInput(this.state.userName);\n  };\n\n  render() {\n    return (\n      <form name=\"userName\" className=\"userNameForm\">\n        <label htmlFor=\"nameInput\">\n          Your name:\n          <Ball displayClass=\"ball\" />\n        </label>\n        <input\n          onChange={this.handleChange}\n          type=\"text\"\n          name=\"nameInput\"\n          id=\"nameInput\"\n        />\n\n        <button className=\"nameButton\" onClick={this.handleSubmit}>\n          {\" \"}\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default NameInput;\n","import { Component } from \"react\";\nimport NameInput from \"./NameInput.js\";\n\nclass Header extends Component {\n  getUsername = (name) => {\n    this.props.getUser(name);\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <div className=\"wrapper\">\n            {/* App name */}\n            <h1>Detective Pokémon</h1>\n\n            {/* Game rules  */}\n            <article className=\"introText\">\n              <p>\n                It is dark times out there. In this new world, Pokémon come to\n                rescue and support the UK law enforcement.\n              </p>\n              <p>\n                Pick a Pokemon that is best suited to help you solve a crime.\n                Each pokemon has different abilities that can help them solve\n                different categories of crime.\n              </p>\n            </article>\n\n            {/* Component to accept user's name  */}\n            <NameInput userInput={this.getUsername} />\n\n            {this.props.username.length >= 2 ? (\n              <p>\n                Thank you{\" \"}\n                <span>\n                  {this.props.username} for joining this fight with us!\n                </span>\n              </p>\n            ) : null}\n          </div>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Header;\n","export const cityCoordinates = [\n  {\n    \"name\":\"London\",\n    \"poly\":\"51.47589,-0.15156:51.47589,-0.10156:51.52589,-0.10156:51.52589,-0.15156\"\n  },\n  {\n    \"name\":\"Birmingham\",\n    \"poly\":\"52.43391,-1.942301:52.43391,-1.842301:52.53391,-1.842301:52.53391,-1.942301\"\n  },\n  {\n    \"name\":\"Liverpool\",\n    \"poly\":\"53.35585,-3.035683:53.35585,-2.935683:53.45585,-2.935683:53.45585,-3.035683\"\n  },\n  {\n    \"name\":\"Nottingham\",\n    \"poly\":\"52.904,-1.290101:52.904,-1.190101:53.004,-1.190101:53.004,-1.290101\"\n  },\n  {\n    \"name\":\"Sheffield\",\n    \"poly\":\"53.34563,-1.689539:53.34563,-1.589539:53.44563,-1.589539:53.44563,-1.689539\"\n  }\n]\n\nexport const crimeCategories = {\n  \"anti-social-behaviour\" : { \n    \"readableCrimeName\": \"antisocial behaviour\",\n    \"successfulType\": 14,\n    \"typeName\": \"psychic\",\n    \"reason\": \"Psychic pokemon are able to read and calm minds!\"\n  },\n  \"bicycle-theft\" : { \n    \"readableCrimeName\": \"bicycle theft\",\n    \"successfulType\": 3,\n    \"typeName\": \"flying\",\n    \"reason\": \"Flying pokemon are able to fly and track the thief!\"\n  },\n  \"burglary\" : { \n    \"readableCrimeName\": \"burglary\",\n    \"successfulType\": 2,\n    \"typeName\": \"fighting\",\n    \"reason\": \"Fighting pokemon are able to beat the burglar in close quarter combat!\"\n  },\n  \"criminal-damage-arson\" : { \n    \"readableCrimeName\": \"criminal damage or arson\",\n    \"successfulType\": 11,\n    \"typeName\": \"water\",\n    \"reason\": \"Water pokemon can put out the fire!\"\n  },\n  \"drugs\" : { \n    \"readableCrimeName\": \"drugs\",\n    \"successfulType\": 4,\n    \"typeName\": \"poison\",\n    \"reason\": \"Poison pokemon can detect drugs and create antidotes!\"\n  },\n  \"possession-of-weapons\" : { \n    \"readableCrimeName\": \"possession of weapons\",\n    \"successfulType\": 8,\n    \"typeName\": \"ghost\",\n    \"reason\": \"Ghost pokemon can't be hurt by corporeal weapons!\"\n  },\n  \"public-order\" : { \n    \"readableCrimeName\": \"public order\",\n    \"successfulType\": 12,\n    \"typeName\": \"grass\",\n    \"reason\": \"Grass pokemon can put people to sleep!\"\n  },\n  \"robbery\" : { \n    \"readableCrimeName\": \"robbery\",\n    \"successfulType\": 13,\n    \"typeName\": \"electric\",\n    \"reason\": \"Electric pokemon can stun the assailant!\"\n  },\n  \"shoplifting\" : { \n    \"readableCrimeName\": \"shoplifting\",\n    \"successfulType\": 15,\n    \"typeName\": \"ice\",\n    \"reason\": \"Ice pokemon can freeze the shoplifter in place!\"\n  },\n  \"theft-from-the-person\" : { \n    \"readableCrimeName\": \"theft from a person\",\n    \"successfulType\": 1,\n    \"typeName\": \"normal\",\n    \"reason\": \"Normal pokemon can stop theft from the person!\"\n  },\n  \"vehicle-crime\" : { \n    \"readableCrimeName\": \"vehicle crime\",\n    \"successfulType\": 16,\n    \"typeName\": \"dragon\",\n    \"reason\": \"Dragon pokemon can fly and stop a car!\"\n  },\n  \"violent-crime\" : { \n    \"readableCrimeName\": \"violent crime\",\n    \"successfulType\": 18,\n    \"typeName\": \"fairy\",\n    \"reason\": \"Fairy pokemon can turn any cruel person into a nice one!\"\n  }\n}","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { cityCoordinates } from \"../dataStructures.js\";\nimport Ball from './Ball.js'\n\nclass Pokemons extends Component {\n  constructor() {\n    super();\n    this.state = {\n      displayPokemonList: [],\n      pokemonList: [],\n      successPokemonArray: [],\n      unSuccessPokemonArray: [],\n      cityName: \"city\",\n    };\n  }\n\n  componentDidMount() {\n    //Make a function call to get a list of 5 pokemons\n    this.getPokemons(this.props.successPokemonType);\n  }\n\n  getPokemons = async (successPokemonType) => {\n    // RIGHT ANSWERS API CALL\n    //Make an API call to get a list of Pokemons for Successful Pokemon Type\n    //Store the top result in the displayPokemons List\n\n    let successfulPokemon = await this.getPokemonsAPICall(successPokemonType);\n\n    const successfulArray = await this.setArrayOfSuccessPokemonObj(\n      successfulPokemon\n    );\n    const finalSuccessArray = await this.getFinalPokemonDisplayList(\n      successfulArray,\n      \"correct\"\n    );\n    const unsuccessfulArray = await this.setArrayOfWrongPokemonObj();\n\n    const finalUnsuccessfulArray = await this.getFinalPokemonDisplayList(\n      unsuccessfulArray,\n      \"wrong\"\n    );\n\n    //Get the selected City\n    this.translateCoordsToCityName();\n\n    // Combine the correct and wrong pokemons to get a final display list\n    this.combineArrays(finalSuccessArray, finalUnsuccessfulArray);\n  };\n\n  //Function to store 10 success pokemons from the Promise Object\n  setArrayOfSuccessPokemonObj = async (succeesPokemonPromise) => {\n    let successArray = [];\n    for (let i = 0; i < 10; i++) {\n      let pokemObject = await succeesPokemonPromise.data.pokemon[\n        this.getRandomIndex(20)\n      ].pokemon;\n      successArray.push(pokemObject);\n    }\n\n    return successArray;\n  };\n\n  //Function to store 10 wrong pokemons from the Promise Object\n  setArrayOfWrongPokemonObj = async () => {\n    // WRONG ANSWERS API CALL\n    //Make an API call to get random pokemon of different types\n    let unsuccessfulPokemonPromises = [];\n    for (let i = 0; i < 10; i++) {\n      unsuccessfulPokemonPromises[i] = await this.getPokemonsAPICall(\n        this.getRandomIndex(17)\n      );\n    }\n    //Parse this promise array to create a list of unsuccessful pokemons\n    const unsuccessfulArray = this.parseUnsuccessfulPokemonPromises(\n      unsuccessfulPokemonPromises\n    );\n\n    return unsuccessfulArray;\n  };\n\n  //Function to make an API to get the pokemon types\n  getPokemonsAPICall = (PokemonType) => {\n    return axios({\n      method: \"GET\",\n      url: `https://pokeapi.co/api/v2/type/${PokemonType}`,\n      dataResponse: \"json\",\n    });\n  };\n\n  //Function to get the selected city\n  translateCoordsToCityName = () => {\n    for (const element of cityCoordinates) {\n      if (element.poly.toString() === this.props.location.toString()) {\n        this.setState({\n          cityName: element.name,\n        });\n      }\n    }\n  };\n\n  //Function to combine the correct and wrong pokemons to get a final display list\n  combineArrays = (successArray, unsuccessArray) => {\n    let finalArray = [];\n\n    finalArray.push(successArray[0]);\n    for (let i = 0; i < 4; i++) {\n      finalArray.push(unsuccessArray[i]);\n    }\n\n    this.shuffle(finalArray);\n    console.log(finalArray);\n    this.setState({\n      displayPokemonList: finalArray,\n    });\n  };\n\n\n  // Fisher-Yates to shuffle the final array everytime before displaying\n  shuffle = (array) => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  };\n  \n  \n  //Function to make an API call to each pokemon endpoint to get the pokemon details(like abilities, image, name etc)\n  getFinalPokemonDisplayList = async (pokemonArray, flag) => {\n\n    let requestPokemonArray = [];\n    let allPokeProperties = [];\n    //Create an array of axios calls\n    for (let i = 0; i < pokemonArray.length; i++) {\n      requestPokemonArray.push(axios.get(pokemonArray[i].url));\n    }\n\n    //promise.all to get all the pokemon properties\n    const resultPokemonObject = await Promise.all([...requestPokemonArray]);\n\n    resultPokemonObject.forEach((pokemonObj) => {\n\n      let onePokeProperties = {};\n       //Pokemon image \n      const pokeImage =\n        pokemonObj[`data`][`sprites`][`other`][`official-artwork`][\n          `front_default`\n        ];\n\n      if (pokeImage !== null) {\n\n        const abilities = pokemonObj[`data`][`abilities`];\n\n        let abilityArray = [];\n        //Pokemon abilites\n        abilities.forEach((ability) => {\n          abilityArray.push(ability.ability.name);\n        });\n\n        //Pokemon Name\n        const pokeName = pokemonObj[`data`][`name`];\n\n        //Create an object with all the pokemon properties\n        onePokeProperties = {\n          name: pokeName,\n          abilities: abilityArray,\n          id: pokemonObj[`data`][`id`],\n          match: flag,\n          image: pokeImage,\n        };\n        // Push the objects in to an array  \n        allPokeProperties.push(onePokeProperties);\n      }\n    });\n    return allPokeProperties;\n  };\n\n\n  //Function that returns a random index\n  getRandomIndex = (limit) => {\n\n    const index = Math.floor(Math.random() * limit);\n    // If the returned index is 0 make it 1\n    return index === 0 ? index + 1 : index;\n  };\n\n  //Function to parse a list of wrong pokemon promises\n  parseUnsuccessfulPokemonPromises = (PokemonPromises) => {\n    let unSuccessfulPokemonArray = [];\n    for (let i = 0; i < PokemonPromises.length; i++) {\n      let pokemObject =\n        PokemonPromises[i].data.pokemon[\n          this.getRandomIndex(PokemonPromises[i].data.pokemon.length)\n        ].pokemon;\n\n      pokemObject.match = \"fail\";\n\n      unSuccessfulPokemonArray.push(pokemObject);\n    }\n\n    return unSuccessfulPokemonArray;\n  };\n\n  //Function to handle the user's pokemon selection\n  handlePokemonSelect = (selectedPokemonObject) => {\n    console.log(selectedPokemonObject);\n    if (selectedPokemonObject.match === \"correct\") {\n      this.props.handleGameFlag(true);\n    } else if (selectedPokemonObject.match === \"wrong\") {\n      this.props.handleGameFlag(false);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {\n         \n        this.state.displayPokemonList.length !== 0 ? (\n          <>\n            <div className=\"quizMessage\">\n              <p>\n                {\" \"}\n                You are in{\" \"}\n                <span className=\"chosenCity\">{this.state.cityName}</span>,\n                trying to solve a{\" \"}\n                <span className=\"chosenCrime\">{this.props.crime}</span> type of\n                crime.\n              </p>\n            </div>\n\n            <div className=\"chooseYourFighter\">\n              <p>Choose a Pokemon to help you solve the case:</p>\n            </div>\n\n            <div className=\"options\">\n              {/* DISPLAY LIST OF POKEMON OPTIONS */}\n              {this.state.displayPokemonList\n                ? this.state.displayPokemonList.map((pokemon, pokemonIndex) => {\n                    return (\n                      <article\n                        className=\"pokeDisplay\"\n                        key={`${pokemonIndex}${pokemon.name}`}\n                        onClick={() => {\n                          this.handlePokemonSelect(pokemon);\n                        }}\n                      >\n                        <p>{pokemon.name}</p>\n\n                        <img\n                          src={pokemon.image}\n                          alt={pokemon.name}\n                          key={pokemon.name}\n                        />\n\n                        <ul>\n                          {pokemon.abilities.map((ability, index) => {\n                            return (\n                              <li key={`${ability}${index}`}>\n                                <span className=\"ability\">{ability}</span>\n                                &nbsp;\n                              </li>\n                            );\n                          })}\n                        </ul>\n                      </article>\n                    );\n                  })\n                : null}\n            </div>\n          </>\n        ) : \n        <Ball displayClass='insidePokemon' />\n          \n        }\n      </div>\n    );\n        \n   }\n}\n\nexport default Pokemons;\n","import React, { Component } from \"react\";\n\nclass Results extends Component {\n  constructor() {\n    super();\n    this.state = {\n      \n    };\n  }\n\n  render() {\n    // If the flag is not set, do not display an results \n    //Otherwise display appropriate results\n    if (this.props.isSuccessfulFlag === \"\") {\n      return null;\n    } else if (this.props.isSuccessfulFlag === false) {\n      return (\n        <div>\n          <h3>Fail</h3>\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <h3>Great job</h3>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Results;\n","import { Component } from \"react\";\nimport { cityCoordinates } from \"../dataStructures.js\";\n\nclass CrimeLocation extends Component {\n\n  //Function to store user's selected location in the parent component's state  \n  onLocationChange = (e) => {\n    this.props.getLocation(e.target.value);\n  };\n\n  //Display the list of locations in the UK(Data retrieved from UK police API)\n  render() {\n    return (\n      <select onChange={this.onLocationChange}>\n        {cityCoordinates.map((place) => {\n          return (\n            <option key={place.poly} value={place.poly}>\n              {place.name}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nexport default CrimeLocation;\n","import { Component } from \"react\";\n\nclass CrimeCategories extends Component {\n\n  //Function to store the user selected Crime category in the parent component's state  \n  handleCrime = (e) => {\n    this.props.getCrimeChange(e.target.value);\n  };\n\n  //Renders all the crime categories. These categories where retrieved from UK Police API\n  render() {\n    return (\n      <select onChange={this.handleCrime}>\n        {this.props.crimeCategoriesArray.map((category, index) => {\n          return (\n            <option key={index} value={category}>\n              {category}\n            </option>\n          );\n        })}\n      </select>\n    );\n  }\n}\n\nexport default CrimeCategories;\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport { crimeCategories } from \"../dataStructures.js\";\nimport Pokemons from \"./Pokemons.js\";\nimport Results from \"./Results.js\";\nimport CrimeLocation from \"./CrimeLocation.js\";\nimport CrimeCategories from \"./CrimeCategories.js\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      crimeCategories: [],\n      selectedCrime: \"\",\n      selectedLocation: \"\",\n      successPokemonType: \"\",\n      gameFlag: \"\",\n    };\n  }\n\n  componentDidMount() {\n    // store each properties in an array\n    const crimeArray = Object.keys(crimeCategories);\n    \n    this.setState({\n      crimeCategories: crimeArray,\n    });\n  }\n\n  //Function to make an API call to get Crime Categories from UK Police API\n  // getCrime = (customArea, crimeCategory) => {\n  //   return axios({\n  //     url: `https://data.police.uk/api/crimes-street/${crimeCategory}`,\n  //     responseType: \"json\",\n  //     method: \"GET\",\n  //     params: {\n  //       poly: customArea,\n  //     },\n  //   });\n  // };\n\n\n//Function to get success Pokemon Type based on the selected Crime Category\n  getPokemonType = (userSelectedCrime) => {\n    let successType;\n    for (const key in crimeCategories) {\n      if (key === userSelectedCrime) {\n        successType = crimeCategories[key].successfulType;\n      }\n    }\n\n    return successType;\n  };\n\n//Function to set the user's selected Location\n  getLocationChange = (selectedLocation) => {\n    this.setState({\n      selectedLocation: selectedLocation,\n    });\n  };\n\n //Function to set the user's selected Crime Category \n  handleCrime = (selectedCrime) => {\n    this.setState({\n      selectedCrime: selectedCrime,\n    });\n  };\n\n\n// Function to handle submit once user has selected the location and crime\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    //Get the success Pokemon Type and set it in State\n    const pokemonType = this.getPokemonType(this.state.selectedCrime);\n    this.setState({\n      successPokemonType: pokemonType,\n    });\n  };\n\n //Function to store the game(win/lose) flag \n  handleGameFlag = (flagValue) => {\n    this.setState({\n      gameFlag: flagValue,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          {/* if selected location not equal to ''\n              then show CrimeCategories dropdown and submit button */}\n          <CrimeLocation getLocation={this.getLocationChange} />\n          \n          {\n            this.state.selectedLocation !== ''\n            ? <>\n                <CrimeCategories getCrimeChange={this.handleCrime} crimeCategoriesArray={this.state.crimeCategories}/>\n                <button onClick={this.handleSubmit}>Submit</button> \n              </>\n            : null\n          }\n          \n        </form>\n\n        {/* DISPLAY ALL QUIZ STUFF */}\n        <div>\n          {this.state.successPokemonType ? (\n            <Pokemons\n              key={this.state.successPokemonType}\n              crime={this.state.selectedCrime}\n              successPokemonType={this.state.successPokemonType}\n              location={this.state.selectedLocation}\n              handleGameFlag={this.handleGameFlag}\n            />\n          ) : null}\n        </div>\n\n        {/* Display the results page      */}\n        <Results\n          key={this.state.gameFlag}\n          isSuccessfulFlag={this.state.gameFlag}\n        />\n\n      </>\n    );\n  }\n}\n\nexport default Home;\n","const Footer = () => {\n  return (\n    //Footer info\n    <footer>\n      <p>\n        Created by: <a href=\"https://twitter.com/CoderQuayne\">Quayne Brown</a>,{\" \"}\n        <a href=\"https://twitter.com/CodeAndChai\">Swetha Chandrasekhar</a> &amp;{\" \"}\n        <a href=\"https://twitter.com/geocities_exe\">Stephen Thomas</a>\n      </p>\n      <p>\n        Created at: <a href=\"https://junocollege.com/\">Juno College</a>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Component } from 'react';\nimport '../App.scss';\n\nimport Header from './Header/Header.js';\nimport Home from './Home.js';\nimport Footer from './Footer.js';\n\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state ={\n      user: ''\n    }\n  }\n\n grabUsername = (name) => {\n    this.setState({\n      user: name\n    })\n }\n\n  render() {\n    return (\n      <>\n       \n        <Header getUser={this.grabUsername} username={this.state.user}/>\n\n        {\n          this.state.user.length >= 2\n            ? <Home />\n            : null\n        }\n        \n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}